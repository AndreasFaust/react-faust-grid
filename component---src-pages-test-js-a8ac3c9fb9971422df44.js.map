{"version":3,"sources":["webpack:///./src/raster/Box/container.js","webpack:///./src/raster/Box/index.js","webpack:///./src/raster/utils/getMediaQueries.js","webpack:///./src/raster/utils/useControl.js","webpack:///./src/raster/utils/useCssMode.js","webpack:///./src/raster/Grid/container.js","webpack:///./src/raster/Control/index.js","webpack:///./src/raster/utils/useCurrentBreakpoint.js","webpack:///./src/raster/Grid/index.js","webpack:///./src/raster/index.js","webpack:///./src/images/image-1.jpg","webpack:///./src/images/image-2.jpg","webpack:///./src/images/image-3.jpg","webpack:///./src/images/image-4.jpg","webpack:///./src/images/image-5.jpg","webpack:///./src/pages/test.js"],"names":["GridContainer","styled","props","media","FlexContainer","ref","Box","className","cols","alignX","alignY","children","left","right","top","bottom","style","styleInner","styleOuter","hasChildBoxes","refCallback","useContext","cssMode","breakpoints","gutterX","gutterY","alignXContext","alignYContext","colspan","parent","controlIsVisible","controlColor","register","useState","hasChildBoxesRegistered","setHasChildBoxes","hasChildBoxesNormalized","useMemo","getReset","alignXNormalized","getAlign","normalizeProps","prop","defaultProp","alignYNormalized","leftNormalized","rightNormalized","topNormalized","bottomNormalized","colsNormalized","colsPercent","getColsPercent","leftPercent","getMarginsPercent","margin","rightPercent","topPercent","bottomPercent","styleOuterNormalized","styleInnerNormalized","styleNormalized","mergeStyles","classNames","colsNumber","value","PropTypes","node","undefined","useControl","control","isVisible","setIsVisible","useEffect","onKeyup","event","prevState","document","Control","position","Array","key","Grid","tag","cssModeNormalized","setCssMode","supportsCSS","window","useCssMode","breakpointsNormalized","currentBreakpoint","currentBp","setCurrentBp","onResize","w","bp","breakpoint","useCurrentBreakpoint","gutterXNormalized","gutterYNormalized","breakpointsLength","max","index","css","getMediaQueries","positionNormalized","string","module","exports","ImageBox","src","alt","IndexPage","boxRef","useRef","gridRef","console"],"mappings":"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","file":"component---src-pages-test-js-a8ac3c9fb9971422df44.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../utils/container'\n\nconst GridContainer = styled(Container)`\n  box-sizing: border-box;\n  display: ${props => props.hasChildBoxes ? 'grid' : 'flex'};\n\n  ${props => props.hasChildBoxes && props.media.map((media, index) => {\n    return media`\n      grid-template-columns: repeat(${props => props.colspan[index]}, 1fr);\n      grid-auto-columns: ${props => props.colspan[index]}fr;\n      grid-auto-rows: min-content;\n      grid-column-gap: ${props.gutterX[index]};\n      grid-row-gap: ${props.gutterY[index]};\n    `\n  })}\n  ${props => props.media.map((media, index) => {\n    return media`\n      ${!props.colsNumber[index] ? 'display: none;' : ''}\n      grid-column: auto / span ${props.cols[index]};\n      margin-left: ${props.left[index]};\n      margin-right: ${props.right[index]};\n      margin-top: ${props.top[index]};\n      margin-bottom: ${props.bottom[index]};\n      ${props.style[index]}\n\n      align-content: ${props => props.alignY[index]};\n      align-items: ${props => props.alignY[index]};\n      // justify-content: ${props => props.alignX[index]};    \n    `\n  })}\n`\n\nconst FlexContainer = styled(Container)`\n  display: flex;\n  box-sizing: border-box;\n  \n  ${props => props.media.map((media, index) => {\n    return media`\n      width: ${props.cols[index]}%;\n      \n      padding-left: calc(${props.gutterX[index]} / 2);\n      padding-right: calc(${props.gutterX[index]} / 2);\n      padding-top: calc(${props.gutterY[index]} / 2);\n      padding-bottom: calc(${props.gutterY[index]} / 2);\n\n      margin-left: ${props.left[index]};\n      margin-right: ${props.right[index]};\n      margin-top: ${props.top[index]};\n      margin-bottom: ${props.bottom[index]};\n      ${props.style[index]}\n    `\n  })\n}\n`\n\nexport default React.forwardRef((props, ref) => {\n  if (props.cssMode === 'flex') {\n    return <FlexContainer {...props} ref={ref} />\n  }\n  return <GridContainer {...props} ref={ref} />\n})\n","import React, { useContext, useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport classNames from 'classnames'\nimport Context from '../context'\nimport getReset from '../utils/getReset'\nimport normalizeProps from '../utils/normalizeProps'\nimport getAlign from '../utils/getAlign'\nimport getColsPercent from '../utils/getColsPercent'\nimport getMarginsPercent from '../utils/getMarginsPercent'\nimport Inner from '../utils/inner'\nimport Resetter from '../utils/resetter'\nimport mergeStyles from '../utils/mergeStyles'\nimport StyledContainer from './container'\n\nconst Box = React.forwardRef(({\n  className,\n  cols,\n  alignX,\n  alignY,\n  children,\n  left,\n  right,\n  top,\n  bottom,\n  style,\n  styleInner,\n  styleOuter,\n  hasChildBoxes,\n  refCallback\n}, ref) => {\n  const {\n    cssMode,\n    breakpoints,\n    gutterX,\n    gutterY,\n    alignX: alignXContext,\n    alignY: alignYContext,\n    colspan,\n    parent,\n    media,\n    controlIsVisible,\n    controlColor,\n    register\n  } = useContext(Context)\n\n  const [hasChildBoxesRegistered, setHasChildBoxes] = useState(undefined)\n  const hasChildBoxesNormalized = useMemo(() => getReset(hasChildBoxes, hasChildBoxesRegistered), [hasChildBoxes, hasChildBoxesRegistered])\n\n  const alignXNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignX, defaultProp: alignXContext, breakpoints }), cssMode), [alignX, alignXContext, breakpoints, cssMode])\n  const alignYNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignY, defaultProp: alignYContext, breakpoints }), cssMode), [alignY, alignYContext, breakpoints, cssMode])\n\n  const leftNormalized = useMemo(() => normalizeProps({ prop: left, breakpoints }), [left, breakpoints])\n  const rightNormalized = useMemo(() => normalizeProps({ prop: right, breakpoints }), [right, breakpoints])\n  const topNormalized = useMemo(() => normalizeProps({ prop: top, breakpoints }), [top, breakpoints])\n  const bottomNormalized = useMemo(() => normalizeProps({ prop: bottom, breakpoints }), [bottom, breakpoints])\n\n  const colsNormalized = useMemo(() => normalizeProps({ prop: cols, defaultProp: parent, breakpoints }), [cols, parent, breakpoints])\n  const colsPercent = useMemo(() => getColsPercent({ cols: colsNormalized, left: leftNormalized, right: rightNormalized, parent, cssMode }), [colsNormalized, leftNormalized, rightNormalized, parent, cssMode])\n\n  const leftPercent = useMemo(() => getMarginsPercent({ margin: leftNormalized, cols: colsPercent, gutterX, parent, cssMode }), [leftNormalized, colsPercent, gutterX, parent, cssMode])\n  const rightPercent = useMemo(() => getMarginsPercent({ margin: rightNormalized, cols: colsPercent, gutterX, parent, cssMode }), [rightNormalized, colsPercent, gutterX, parent, cssMode])\n  const topPercent = useMemo(() => getMarginsPercent({ margin: topNormalized, cols: colsPercent, gutterX, parent, cssMode }), [topNormalized, colsPercent, gutterX, parent, cssMode])\n  const bottomPercent = useMemo(() => getMarginsPercent({ margin: bottomNormalized, cols: colsPercent, gutterX, parent, cssMode }), [bottomNormalized, colsPercent, gutterX, parent, cssMode])\n\n  const styleOuterNormalized = useMemo(() => normalizeProps({ prop: styleOuter, breakpoints }), [styleOuter, breakpoints])\n  const styleInnerNormalized = useMemo(() => normalizeProps({ prop: styleInner, breakpoints }), [styleInner, breakpoints])\n  const styleNormalized = useMemo(() => mergeStyles(normalizeProps({ prop: style, breakpoints }), styleInnerNormalized, styleOuterNormalized), [style, breakpoints, styleInnerNormalized, styleOuterNormalized])\n  if (register) register()\n\n  return (\n    <StyledContainer\n      cssMode={cssMode}\n      breakpoints={breakpoints}\n      className={classNames(['Box', className])}\n      cols={colsPercent}\n      colsNumber={colsNormalized}\n      media={media}\n      gutterX={gutterX}\n      gutterY={gutterY}\n      colspan={colsNormalized}\n      hasChildBoxes={hasChildBoxesNormalized}\n      alignX={alignXNormalized}\n      alignY={alignYNormalized}\n\n      left={leftPercent}\n      right={rightPercent}\n      top={topPercent}\n      bottom={bottomPercent}\n      style={cssMode === 'grid'\n        ? styleNormalized\n        : styleOuterNormalized\n      }\n      ref={ref}\n    >\n      <Inner\n        cssMode={cssMode}\n        className='Box__Inner'\n        gutterX={gutterX}\n        gutterY={gutterY}\n        media={media}\n        alignX={alignXNormalized}\n        alignY={alignYNormalized}\n        style={styleInnerNormalized}\n        breakpoints={breakpoints}\n        controlIsVisible={controlIsVisible}\n        controlColor={controlColor}\n      >\n        <Resetter\n          cssMode={cssMode}\n          className='Box__Resetter'\n          hasChildBoxes={hasChildBoxesNormalized}\n          media={media}\n          gutterX={gutterX}\n          gutterY={gutterY}\n          alignX={alignXNormalized}\n          alignY={alignYNormalized}\n          breakpoints={breakpoints}\n        >\n          <Context.Provider\n            value={{\n              breakpoints,\n              gutterX,\n              gutterY,\n              alignX: alignXNormalized,\n              alignY: alignYNormalized,\n              colspan,\n              media,\n              parent: colsNormalized,\n              controlIsVisible,\n              cssMode,\n              register: () => {\n                if (!hasChildBoxesRegistered) {\n                  setHasChildBoxes(true)\n                }\n              }\n            }}\n          >\n            {children}\n          </Context.Provider>\n        </Resetter>\n      </Inner>\n    </StyledContainer>\n  )\n})\n\nBox.displayName = 'Box'\n\nBox.propTypes = {\n  /**  Width of the Box. Falls back to width of parent Box or Grid. Unit: Grid columns defined with the prop \"colspan\" */\n  cols: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  /**  Left margin of the Box. Unit: Grid-columns. */\n  left: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  /**  Right margin of the Box. Unit: Grid-columns. */\n  right: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  /**  Top margin of the Box. Unit: Grid-columns. */\n  top: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  /**  Bottom margin of the Box. Unit: Grid-columns. */\n  bottom: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  /**  cssMode={flex} only! Horizontal Align of child elements. */\n  alignX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Vertical Align of child elements. */\n  alignY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={grid} only! Custom styles with styled-components. */\n  style: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Box-Inner-Container with styled-components. */\n  styleInner: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Box-Outer-Container with styled-components. */\n  styleOuter: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Tell react-raster that you have child-Boxes inside this Grid- or Box-Component. See the topic \"Resetting Boxes\" */\n  hasChildBoxes: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\nBox.defaultProps = {\n  className: '',\n  cols: undefined,\n  alignX: '',\n  alignY: '',\n  children: null,\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  style: '',\n  styleInner: '',\n  styleOuter: '',\n  hasChildBoxes: undefined\n}\n\nexport default Box\nexport { Box }\n","import { css } from 'styled-components'\n\nexport default (breakpoints) => {\n  const breakpointsLength = breakpoints.length\n  return breakpoints.map((bp, index) => {\n    const max = index !== breakpointsLength - 1\n      ? ` and (max-width: ${breakpoints[index + 1] - 1}px)`\n      : ''\n\n    return (...args) => css`\n      @media (min-width: ${bp}px)${max} {\n        ${css(...args)};\n      }\n    `\n  })\n}\n","import { useState, useEffect } from 'react'\n\nconst useControl = (control) => {\n  const [isVisible, setIsVisible] = useState(false)\n  useEffect(() => {\n    function onKeyup (event) {\n      if (event.keyCode !== 27) return\n      setIsVisible(prevState => !prevState)\n    }\n    if (!control) return\n    document.addEventListener('keyup', onKeyup)\n    return () => document.removeEventListener('keyup', onKeyup)\n  }, [])\n\n  return isVisible\n}\n\nexport default useControl\n","import { useState, useEffect } from 'react'\n\nexport default (initialValue) => {\n  const [cssMode, setCssMode] = useState(initialValue)\n\n  useEffect(() => {\n    if (cssMode) return\n    const supportsCSS = (window.CSS && window.CSS.supports) || window.supportsCSS || false\n    const supportsGrid = supportsCSS\n      ? supportsCSS('grid-template-rows', 'none')\n      : false\n\n    if (!supportsGrid) {\n      setCssMode('flex')\n    }\n  }, [])\n\n  return cssMode\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../utils/container'\n\nconst GridContainer = styled(Container)`\n  display: grid;\n  grid-template-columns: repeat(${props => props.colspan}, 1fr);\n  grid-auto-columns: ${props => props.colspan}fr;\n  grid-auto-rows: min-content;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      grid-column-gap: ${props.gutterX[index]};\n      grid-row-gap: ${props.gutterY[index]};\n      ${props.style[index]}\n      align-content: ${props => props.alignY[index]};\n      align-items: ${props => props.alignY[index]};\n      // justify-content: ${props => props.alignX[index]};\n    `\n  })}\n`\n\nconst FlexContainer = styled(Container)`\n  display: flex;\n  align-items: stretch;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      ${props.style[index]}\n    `\n  })}\n`\n\nexport default React.forwardRef((props, ref) => {\n  if (props.cssMode === 'flex') {\n    return <FlexContainer {...props} ref={ref} />\n  }\n  return <GridContainer {...props} ref={ref} />\n})\n","import React from 'react'\nimport Grid from '../Grid'\nimport Box from '../Box'\n// import { css } from 'styled-components'\n\nconst styleOuter = `\n  width: 100%;\n  z-index: 10000;\n  left: 0; \n  top: 0; \n  bottom: 0;\n  margin: 0;\n`\n\nconst Control = (props) => {\n  return (\n    <Grid\n      {...props}\n      position='absolute'\n      className='Grid--Control'\n      alignY='stretch'\n      styleOuter={props.cssMode === 'grid'\n        ? styleOuter\n        : styleOuter + 'margin: 0;'\n      }\n      styleInner={`\n        grid-auto-rows: auto;\n      `}\n    >\n      {[...Array(props.colspan)].map((col, index) => (\n        <Box\n          key={index}\n          cols={1}\n          styleInner={`\n            background-color: ${props.controlColor};\n          `}\n        />\n      ))}\n    </Grid>\n  )\n}\n\nexport default Control\n","import { useState, useEffect } from 'react'\n\nexport default (breakpoints) => {\n  const [currentBp, setCurrentBp] = useState(0)\n  useEffect(() => {\n    function onResize () {\n      const w = window.innerWidth\n      let bp = 0\n      breakpoints.forEach(breakpoint => {\n        if (breakpoint <= w) {\n          bp = breakpoint\n        }\n      })\n      setCurrentBp(bp)\n    }\n    onResize()\n    window.addEventListener('resize', onResize)\n    return () => window.removeEventListener('resize', onResize)\n  }, [])\n  return currentBp\n}\n","import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Context from '../context'\nimport normalizeProps from '../utils/normalizeProps'\nimport getMediaQueries from '../utils/getMediaQueries'\nimport getAlign from '../utils/getAlign'\nimport useControl from '../utils/useControl'\nimport Inner from '../utils/inner'\nimport Resetter from '../utils/resetter'\nimport useCssMode from '../utils/useCssMode'\nimport StyledContainer from './container'\nimport Control from '../Control'\nimport mergeStyles from '../utils/mergeStyles'\nimport useCurrentBreakpoint from '../utils/useCurrentBreakpoint'\n\nconst Grid = React.forwardRef((props, ref) => {\n  const {\n    breakpoints,\n    left,\n    right,\n    top,\n    bottom,\n    gutterX,\n    gutterY,\n    alignX,\n    alignY,\n    colspan,\n    control,\n    controlColor,\n    position,\n    className,\n    style,\n    styleInner,\n    styleOuter,\n    children,\n    cssMode,\n    tag\n  } = props\n  const controlIsVisible = useControl(control)\n  const cssModeNormalized = useCssMode(cssMode || 'grid')\n\n  const breakpointsNormalized = useMemo(() => breakpoints, [breakpoints])\n  const currentBreakpoint = useCurrentBreakpoint(breakpointsNormalized)\n  const gutterXNormalized = useMemo(() => normalizeProps({ prop: gutterX, breakpoints: breakpointsNormalized }), [gutterX, breakpointsNormalized])\n  const gutterYNormalized = useMemo(() => normalizeProps({ prop: gutterY, breakpoints: breakpointsNormalized }), [gutterY, breakpointsNormalized])\n  const alignXNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignX, breakpoints: breakpointsNormalized }), cssModeNormalized, true), [alignX, breakpointsNormalized, cssModeNormalized])\n  const alignYNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignY, breakpoints: breakpointsNormalized }), cssModeNormalized, true), [alignY, breakpointsNormalized, cssModeNormalized])\n\n  const media = useMemo(() => getMediaQueries(breakpointsNormalized), [breakpointsNormalized])\n  const parent = useMemo(() => normalizeProps({ prop: colspan, breakpoints: breakpointsNormalized }), [colspan, breakpointsNormalized])\n  const leftNormalized = useMemo(() => normalizeProps({ prop: left, breakpoints: breakpointsNormalized }), [left, breakpointsNormalized])\n  const rightNormalized = useMemo(() => normalizeProps({ prop: right, breakpoints: breakpointsNormalized }), [right, breakpointsNormalized])\n  const topNormalized = useMemo(() => normalizeProps({ prop: top, breakpoints: breakpointsNormalized }), [top, breakpointsNormalized])\n  const bottomNormalized = useMemo(() => normalizeProps({ prop: bottom, breakpoints: breakpointsNormalized }), [bottom, breakpointsNormalized])\n  const positionNormalized = useMemo(() => normalizeProps({ prop: position, breakpoints: breakpointsNormalized }), [position, breakpointsNormalized])\n  const styleOuterNormalized = useMemo(() => normalizeProps({ prop: styleOuter, breakpoints }), [styleOuter, breakpoints])\n  const styleInnerNormalized = useMemo(() => normalizeProps({ prop: styleInner, breakpoints }), [styleInner, breakpoints])\n  const styleNormalized = useMemo(() => mergeStyles(normalizeProps({ prop: style, breakpoints }), styleInnerNormalized, styleOuterNormalized), [style, breakpoints, styleInnerNormalized, styleOuterNormalized])\n\n  return (\n    <StyledContainer\n      cssMode={cssModeNormalized}\n      colspan={colspan}\n      className={classNames(['Grid', `bp-${currentBreakpoint}`, className])}\n      gutterX={gutterXNormalized}\n      gutterY={gutterYNormalized}\n      alignX={alignXNormalized}\n      alignY={alignYNormalized}\n      media={media}\n      left={leftNormalized}\n      right={rightNormalized}\n      top={topNormalized}\n      bottom={bottomNormalized}\n      position={positionNormalized}\n      tag={tag}\n      style={cssModeNormalized === 'grid'\n        ? styleNormalized\n        : styleOuterNormalized\n      }\n      ref={ref}\n    >\n      {control && controlIsVisible && (\n        <Control\n          cssMode={cssModeNormalized}\n          colspan={colspan}\n          breakpoints={breakpoints}\n          gutterX={gutterX}\n          gutterY={gutterY}\n          left={left}\n          right={right}\n          top={top}\n          bottom={bottom}\n          controlColor={controlColor}\n        />\n      )}\n      <Inner\n        cssMode={cssModeNormalized}\n        className='Grid__Inner'\n        gutterX={gutterXNormalized}\n        gutterY={gutterYNormalized}\n        alignX={alignXNormalized}\n        alignY={alignYNormalized}\n        media={media}\n        style={styleInnerNormalized}\n        controlColor={controlColor}\n      >\n        <Resetter\n          cssMode={cssModeNormalized}\n          className='Grid__Resetter'\n          hasChildBoxes\n          gutterX={gutterXNormalized}\n          gutterY={gutterYNormalized}\n          alignX={alignXNormalized}\n          alignY={alignYNormalized}\n          media={media}\n        >\n          <Context.Provider\n            value={{\n              cssMode: cssModeNormalized,\n              breakpoints: breakpointsNormalized,\n              gutterX: gutterXNormalized,\n              gutterY: gutterYNormalized,\n              alignX: alignXNormalized,\n              alignY: alignYNormalized,\n              media,\n              colspan,\n              parent,\n              controlIsVisible,\n              controlColor\n            }}\n          >\n            {children}\n          </Context.Provider>\n        </Resetter>\n      </Inner>\n    </StyledContainer>\n  )\n})\n\nGrid.propTypes = {\n  /** Breakpoints in Pixels, in ascending order starting with zero. */\n  breakpoints: PropTypes.array,\n  /** Number of columns. */\n  colspan: PropTypes.number,\n  /**  Left padding of the Grid. */\n  left: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Right padding of the Grid. */\n  right: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Top padding of the Grid. */\n  top: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Bottom padding of the Grid. */\n  bottom: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal gutter. */\n  gutterX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Verical gutter. */\n  gutterY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal align of child elements. Works only when: cssMode={flex}  */\n  alignX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Vertical align of child elements. */\n  alignY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Enable visual control via ESC-Key. */\n  control: PropTypes.bool,\n  /**  Custom color for the grid-control. */\n  controlColor: PropTypes.string,\n  /**  CSS-position. */\n  position: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  className: PropTypes.string,\n  /**  cssMode={grid} only! Custom styles with styled-components. */\n  style: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Inner-Container with styled-components. */\n  styleInner: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Outer-Container with styled-components. */\n  styleOuter: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  children: PropTypes.node,\n  /**  Use CSS Grid Layout or Flexbox. Override automatic detection of Grid-Layout-support. */\n  cssMode: PropTypes.string,\n  tag: PropTypes.string\n  /**  cssMode={flex} only!  Tell react-raster that you have child-Boxes inside this Grid- or Box-Component. See the topic \"Group Boxes inside custom components\" for more information. If the Boxes are nested inside other components react-raster does not know, that you are sitll using its grid. */\n  // reset: PropTypes.bool\n}\n\nGrid.defaultProps = {\n  breakpoints: [0, 432, 768, 1024, 1200, 1400],\n  left: '0',\n  right: '0',\n  top: '0',\n  bottom: '0',\n  gutterX: '0',\n  gutterY: '0',\n  alignX: '',\n  alignY: '',\n  colspan: 1,\n  control: false,\n  controlColor: 'rgba(0, 0, 0, 0.1)',\n  position: 'relative',\n  style: '',\n  styleOuter: '',\n  styleInner: '',\n  className: '',\n  children: null,\n  cssMode: undefined,\n  tag: 'div'\n  // reset: undefined\n}\n\nexport default Grid\nexport { Grid }\n","export { default as Grid } from './Grid'\nexport { default as Box } from './Box'\n","module.exports = __webpack_public_path__ + \"static/image-1-eccf4f7ba9a159d650716ae15279e682.jpg\";","module.exports = __webpack_public_path__ + \"static/image-2-da6160ba8a2e9c93efc8d35a819a1df5.jpg\";","module.exports = __webpack_public_path__ + \"static/image-3-5e617a333df9c755a71b210b8a49e2b4.jpg\";","module.exports = __webpack_public_path__ + \"static/image-4-092afe3104f0491a58f331156e20cfb8.jpg\";","module.exports = __webpack_public_path__ + \"static/image-5-a81aee5143703919c113b9c84881d3c8.jpg\";","import React, { useEffect, useRef } from 'react'\nimport { Link } from 'gatsby'\nimport { Grid, Box } from '../raster'\nimport image1 from '../images/image-1.jpg'\nimport image2 from '../images/image-2.jpg'\nimport image3 from '../images/image-3.jpg'\nimport image4 from '../images/image-4.jpg'\nimport image5 from '../images/image-5.jpg'\n\nconst ImageBox = () => (\n  <Box\n    // top={0.5}\n    // left={0.5}\n    cols={2}\n    alignY={'center'}\n    style={`\n      background: pink;\n      height: 300px;\n\n      img { \n        display: block;\n        width: 100%; \n      }\n    `}\n    // styleInner={`\n    //   background: pink;\n\n    //   img {\n    //     display: block;\n    //     width: 100%;\n    //     width: 100% !important;\n    //     height: auto !important;\n\n    //   }\n    // `}\n  >\n    <img src={image2} alt='Sample Image' />\n  </Box>\n)\n\nconst IndexPage = () => {\n  const boxRef = useRef()\n  const gridRef = useRef()\n  useEffect(() => {\n    console.log(boxRef.current)\n    console.log(gridRef.current)\n  }, [])\n  return (\n    <Grid\n      tag='section'\n      breakpoints={[0, 500, 768, 1024, 1200, 1400]}\n      left={'1.5vw'}\n      right={'3vw'}\n      top={'10vw'}\n      bottom={'20vw'}\n      gutterX={'1.5vw'}\n      gutterY={'3vw'}\n      colspan={12}\n      alignX={'center'}\n      alignY={'center'}\n      control\n      // styleOuter={`width: 80%;`}\n      style={`\n        background: blue;\n        &.bp-768 {\n          // background: black;\n        }\n      `}\n      // cssMode='flex'\n      ref={gridRef}\n    >\n      <Box\n        ref={boxRef}\n        className='Box--1'\n        cols={[4]}\n        left={[2]}\n        right={[1]}\n        alignY='center'\n        style={`\n        background: yellow;\n        height: 400px;\n        \n        .bp-768 & {\n          background: black;\n        }\n      `}\n      >\n        <ImageBox />\n        <Box\n          className='Box--3'\n          cols={[1]}\n          left={[1]}\n          alignY='center'\n          style={`\n            background: green;\n            height: 150px;\n          `}\n        />\n      </Box>\n      <Box\n        ref={boxRef}\n        className='Box--2'\n        cols={[4]}\n        left={[0]}\n        style={`\n          background: yellow;\n          height: 200px;\n        `}\n      >\n        <ImageBox />\n      </Box>\n      {/* <Box\n      className='Box--1'\n      cols={[5]}\n      left={[2]}\n      top={[2]}\n      styleInner={`\n        background: green;\n      `}\n    >\n      <Box\n        className='Box--1'\n        cols={[2]}\n        left={[2]}\n        styleInner={`\n        background: pink;\n        height: 200px;\n      `}\n      >\n        <div className='content'>Welt!</div>\n      </Box>\n    </Box> */}\n\n      {/* <Box\n    className='Box--3'\n    hasChildBoxes\n    cols={[8, 7, 6, 5, 4, 3]}\n    alignY={'top'}\n    styleInner={`\n      background: grey;\n    `}\n  >\n    <ChildBox />\n  </Box> */}\n      {/* <Box\n    className='Box--2'\n    cols={[6]}\n    left={[1, 1, 2]}\n  >\n    <div className='content'>Welt!</div>\n  </Box>\n  <Box\n    className='Box--3'\n    cols={[6]}\n    styleInner={[`\n      // background: pink;\n    `]}\n  >\n    <Box\n      cols={[6, 6, 6, 3]}\n      styleInner={[`\n        background: blue;\n      `]}\n    >\n      <div className='content'>Welt!</div>\n    </Box>\n    <Box cols={[3]} left={1}>\n      <div className='content'>Welt!</div>\n    </Box>\n  </Box> */}\n    </Grid>\n\n  )\n}\nexport default IndexPage\n"],"sourceRoot":""}