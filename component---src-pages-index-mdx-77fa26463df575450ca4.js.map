{"version":3,"sources":["webpack:///./src/pages/index.mdx","webpack:///./src/raster/utils/useControl.js","webpack:///./src/raster/utils/useCssMode.js","webpack:///./src/raster/Grid/container.js","webpack:///./src/raster/Control/index.js","webpack:///./src/raster/Grid/index.js","webpack:///./src/raster/utils/getMediaQueries.js","webpack:///./src/raster/index.js","webpack:///./src/images/image-1.jpg","webpack:///./src/images/image-2.jpg","webpack:///./src/images/image-3.jpg","webpack:///./src/images/image-4.jpg","webpack:///./src/images/image-5.jpg"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__","_extends","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Grid","Box","image1","image2","image3","image4","image5","_raster__WEBPACK_IMPORTED_MODULE_4__","left","right","top","bottom","gutterX","gutterY","colspan","alignX","alignY","control","style","cols","className","src","alt","isMDXComponent","useControl","_useState2","_slicedToArray","useState","isVisible","setIsVisible","useEffect","onKeyup","event","prevState","document","utils_useControl","GridContainer","styled","container","withConfig","displayName","componentId","media","map","index","_templateObject","FlexContainer","_templateObject2","Grid_container","react_default","a","forwardRef","ref","createElement","styleOuter","Control","raster_Grid","Control_extends","position","_toConsumableArray","Array","col","key","styleInner","concat","controlColor","raster_Control","breakpoints","children","cssMode","tag","controlIsVisible","cssModeNormalized","initialValue","useCssMode_slicedToArray","setCssMode","supportsCSS","window","supports","useCssMode","breakpointsNormalized","useMemo","gutterXNormalized","normalizeProps","prop","gutterYNormalized","alignXNormalized","getAlign","alignYNormalized","breakpointsLength","length","bp","max","css","arguments","parent","leftNormalized","rightNormalized","topNormalized","bottomNormalized","positionNormalized","styleOuterNormalized","styleInnerNormalized","styleNormalized","mergeStyles","classNames","inner","resetter","hasChildBoxes","context","Provider","value","PropTypes","array","number","string","bool","node","undefined","__webpack_exports__","_Grid__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","_Box__WEBPACK_IMPORTED_MODULE_1__","module","exports","p"],"mappings":"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","file":"component---src-pages-index-mdx-77fa26463df575450ca4.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/andreasfaust/components/react-raster/.docz/app/components/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Grid, Box } from \"../raster\";\nimport image1 from \"../images/image-1.jpg\";\nimport image2 from \"../images/image-2.jpg\";\nimport image3 from \"../images/image-3.jpg\";\nimport image4 from \"../images/image-4.jpg\";\nimport image5 from \"../images/image-5.jpg\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"react-raster\"\n    }}>{`react-raster`}</h1>\n    <p>{`An advanced grid-system based on styled-components; highly customizable while being easy to use.\nRegardless, if your grid is simple or complex: react-raster simplifies layouting.`}</p>\n    <p>{`It combines features from `}<inlineCode parentName=\"p\">{`Flexbox`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Grid Layout`}</inlineCode>{` to provide a simple yet flexible layout-interface.\nOn current browsers it uses the benefits of `}<inlineCode parentName=\"p\">{`Grid Layout`}</inlineCode>{`. On legacy browsers it automatically falls back to plain `}<inlineCode parentName=\"p\">{`Flexbox`}</inlineCode>{` (almost) without any changes (see Section `}<strong parentName=\"p\">{`Flexbox`}</strong>{`).`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p><strong parentName=\"p\">{`Scale your viewport`}</strong>{` to see the layout changing.`}</p>\n    <p>{`Press `}<inlineCode parentName=\"p\">{`ESC`}</inlineCode>{` to see the visual control.`}</p>\n    <Playground __position={0} __code={'<Grid\\n  left={\\'3vw\\'}\\n  right={\\'3vw\\'}\\n  top={\\'1rem\\'}\\n  bottom={\\'2rem\\'}\\n  gutterX={\\'1.5vw\\'}\\n  gutterY={\\'10px\\'}\\n  colspan={12}\\n  alignX={\\'right\\'}\\n  alignY={\\'top\\'}\\n  control\\n  style={`background-image: linear-gradient(lightblue, coral);`}\\n>\\n  <Box\\n    top={1}\\n    cols={[3, 3, 3, 6]}\\n    style={`\\n          background: pink;\\n          img { width: 100%; display: block; }\\n        `}\\n  >\\n    <div className=\\\"image-wrapper\\\">\\n      <img src={image1} alt=\\\"Sample Image\\\" />\\n    </div>\\n  </Box>\\n  <Box\\n    top={1}\\n    cols={[3, 3, 3, 6]}\\n    style={`\\n          background: pink;\\n          align-self: end;\\n          img { width: 100%; display: block; }\\n        `}\\n  >\\n    <div className=\\\"image-wrapper\\\">\\n      <img src={image2} alt=\\\"Sample Image\\\" />\\n    </div>\\n  </Box>\\n  <Box\\n    top={1}\\n    left={[2, 2, 2, 0]}\\n    cols={4}\\n    style={`\\n          background: pink;\\n          img { width: 100%; display: block; }\\n        `}\\n  >\\n    <div className=\\\"image-wrapper\\\">\\n      <img src={image3} alt=\\\"Sample Image\\\" />\\n    </div>\\n  </Box>\\n  <Box\\n    cols={[12, 12, 12, 8]}\\n    left={0}\\n    top={1}\\n    alignY=\\\"center\\\"\\n    style={`\\n          background-image: linear-gradient(lightblue, yellow);\\n        `}\\n  >\\n    <Box\\n      cols={5}\\n      style={`\\n            background: yellow;\\n            img { width: 100%; display: block; }\\n          `}\\n    >\\n      <div className=\\\"image-wrapper\\\">\\n        <img src={image4} alt=\\\"Sample Image\\\" />\\n      </div>\\n    </Box>\\n    <Box\\n      cols={5}\\n      left={2}\\n      style={`\\n            background: yellow;\\n            img { width: 100%; display: block; }\\n          `}\\n    >\\n      <div className=\\\"image-wrapper\\\">\\n        <img src={image5} alt=\\\"Sample Image\\\" />\\n      </div>\\n    </Box>\\n  </Box>\\n</Grid>'} __scope={{\n      props: this ? this.props : props,\n      DefaultLayout,\n      Playground,\n      Grid,\n      Box,\n      image1,\n      image2,\n      image3,\n      image4,\n      image5\n    }} mdxType=\"Playground\">\n    <Grid left={'3vw'} right={'3vw'} top={'1rem'} bottom={'2rem'} gutterX={'1.5vw'} gutterY={'10px'} colspan={12} alignX={'right'} alignY={'top'} control style={`background-image: linear-gradient(lightblue, coral);`} mdxType=\"Grid\">\n        <Box top={1} cols={[3, 3, 3, 6]} style={`\n            background: pink;\n            img { width: 100%; display: block; }\n          `} mdxType=\"Box\">\n            <div className='image-wrapper'>\n              <img src={image1} alt=\"Sample Image\" />\n            </div>\n        </Box>\n        <Box top={1} cols={[3, 3, 3, 6]} style={`\n            background: pink;\n            align-self: end;\n            img { width: 100%; display: block; }\n          `} mdxType=\"Box\">\n          <div className='image-wrapper'>\n            <img src={image2} alt=\"Sample Image\" />\n          </div>\n        </Box>\n        <Box top={1} left={[2, 2, 2, 0]} cols={4} style={`\n            background: pink;\n            img { width: 100%; display: block; }\n          `} mdxType=\"Box\">\n          <div className='image-wrapper'>\n            <img src={image3} alt=\"Sample Image\" />\n          </div>\n        </Box>\n        <Box cols={[12, 12, 12, 8]} left={0} top={1} alignY='center' style={`\n            background-image: linear-gradient(lightblue, yellow);\n          `} mdxType=\"Box\">\n          <Box cols={5} style={`\n              background: yellow;\n              img { width: 100%; display: block; }\n            `} mdxType=\"Box\">\n            <div className='image-wrapper'>\n              <img src={image4} alt=\"Sample Image\" />\n            </div>\n          </Box>\n          <Box cols={5} left={2} style={`\n              background: yellow;\n              img { width: 100%; display: block; }\n            `} mdxType=\"Box\">\n            <div className='image-wrapper'>\n              <img src={image5} alt=\"Sample Image\" />\n            </div>\n          </Box>\n        </Box>\n    </Grid>\n    </Playground>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      ","import { useState, useEffect } from 'react'\n\nconst useControl = (control) => {\n  const [isVisible, setIsVisible] = useState(false)\n  useEffect(() => {\n    function onKeyup (event) {\n      if (event.keyCode !== 27) return\n      setIsVisible(prevState => !prevState)\n    }\n    if (!control) return\n    document.addEventListener('keyup', onKeyup)\n    return () => document.removeEventListener('keyup', onKeyup)\n  }, [])\n\n  return isVisible\n}\n\nexport default useControl\n","import { useState, useEffect } from 'react'\n\nexport default (initialValue) => {\n  const [cssMode, setCssMode] = useState(initialValue)\n\n  useEffect(() => {\n    if (cssMode) return\n    const supportsCSS = (window.CSS && window.CSS.supports) || window.supportsCSS || false\n    const supportsGrid = supportsCSS\n      ? supportsCSS('grid-template-rows', 'none')\n      : false\n\n    if (!supportsGrid) {\n      setCssMode('flex')\n    }\n  }, [])\n\n  return cssMode\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../utils/container'\n\nconst GridContainer = styled(Container)`\n  display: grid;\n  grid-template-columns: repeat(${props => props.colspan}, 1fr);\n  grid-auto-columns: ${props => props.colspan}fr;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      grid-column-gap: ${props.gutterX[index]};\n      grid-row-gap: ${props.gutterY[index]};\n      ${props.style[index]}\n      align-items: ${props => props.alignY[index]};\n      justify-content: ${props => props.alignX[index]};\n    `\n  })}\n`\n\nconst FlexContainer = styled(Container)`\n  display: flex;\n  align-items: stretch;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      ${props.style[index]}\n    `\n  })}\n`\n\nexport default React.forwardRef((props, ref) => {\n  if (props.cssMode === 'flex') {\n    return <FlexContainer {...props} ref={ref} />\n  }\n  return <GridContainer {...props} ref={ref} />\n})\n","import React from 'react'\nimport Grid from '../Grid'\nimport Box from '../Box'\n// import { css } from 'styled-components'\n\nconst styleOuter = `\n  width: 100%;\n  z-index: 10000;\n  left: 0; \n  top: 0; \n  bottom: 0;\n  margin: 0;\n`\n\nconst Control = (props) => {\n  return (\n    <Grid\n      {...props}\n      position='absolute'\n      className='Grid--Control'\n      alignY='stretch'\n      styleOuter={props.cssMode === 'grid'\n        ? styleOuter\n        : styleOuter + 'margin: 0;'\n      }\n    >\n      {[...Array(props.colspan)].map((col, index) => (\n        <Box\n          key={index}\n          cols={1}\n          styleInner={`\n            background-color: ${props.controlColor};\n          `}\n        />\n      ))}\n    </Grid>\n  )\n}\n\nexport default Control\n","import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Context from '../context'\nimport normalizeProps from '../utils/normalizeProps'\nimport getMediaQueries from '../utils/getMediaQueries'\nimport getAlign from '../utils/getAlign'\nimport useControl from '../utils/useControl'\nimport Inner from '../utils/inner'\nimport Resetter from '../utils/resetter'\nimport useCssMode from '../utils/useCssMode'\nimport StyledContainer from './container'\nimport Control from '../Control'\nimport mergeStyles from '../utils/mergeStyles'\n\nconst Grid = React.forwardRef((props, ref) => {\n  const {\n    breakpoints,\n    left,\n    right,\n    top,\n    bottom,\n    gutterX,\n    gutterY,\n    alignX,\n    alignY,\n    colspan,\n    control,\n    controlColor,\n    position,\n    className,\n    style,\n    styleInner,\n    styleOuter,\n    children,\n    cssMode,\n    tag\n  } = props\n  const controlIsVisible = useControl(control)\n  const cssModeNormalized = useCssMode(cssMode || 'grid')\n\n  const breakpointsNormalized = useMemo(() => breakpoints, [breakpoints])\n  const gutterXNormalized = useMemo(() => normalizeProps({ prop: gutterX, breakpoints: breakpointsNormalized }), [gutterX, breakpointsNormalized])\n  const gutterYNormalized = useMemo(() => normalizeProps({ prop: gutterY, breakpoints: breakpointsNormalized }), [gutterY, breakpointsNormalized])\n  const alignXNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignX, breakpoints: breakpointsNormalized }), cssModeNormalized), [alignX, breakpointsNormalized, cssModeNormalized])\n  const alignYNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignY, breakpoints: breakpointsNormalized }), cssModeNormalized), [alignY, breakpointsNormalized, cssModeNormalized])\n\n  const media = useMemo(() => getMediaQueries(breakpointsNormalized), [breakpointsNormalized])\n  const parent = useMemo(() => normalizeProps({ prop: colspan, breakpoints: breakpointsNormalized }), [colspan, breakpointsNormalized])\n  const leftNormalized = useMemo(() => normalizeProps({ prop: left, breakpoints: breakpointsNormalized }), [left, breakpointsNormalized])\n  const rightNormalized = useMemo(() => normalizeProps({ prop: right, breakpoints: breakpointsNormalized }), [right, breakpointsNormalized])\n  const topNormalized = useMemo(() => normalizeProps({ prop: top, breakpoints: breakpointsNormalized }), [top, breakpointsNormalized])\n  const bottomNormalized = useMemo(() => normalizeProps({ prop: bottom, breakpoints: breakpointsNormalized }), [bottom, breakpointsNormalized])\n  const positionNormalized = useMemo(() => normalizeProps({ prop: position, breakpoints: breakpointsNormalized }), [position, breakpointsNormalized])\n  const styleOuterNormalized = useMemo(() => normalizeProps({ prop: styleOuter, breakpoints }), [styleOuter, breakpoints])\n  const styleInnerNormalized = useMemo(() => normalizeProps({ prop: styleInner, breakpoints }), [styleInner, breakpoints])\n  const styleNormalized = useMemo(() => mergeStyles(normalizeProps({ prop: style, breakpoints }), styleInnerNormalized, styleOuterNormalized), [style, breakpoints, styleInnerNormalized, styleOuterNormalized])\n\n  return (\n    <StyledContainer\n      cssMode={cssModeNormalized}\n      colspan={colspan}\n      className={classNames(['Grid', className])}\n      gutterX={gutterXNormalized}\n      gutterY={gutterYNormalized}\n      alignX={alignXNormalized}\n      alignY={alignYNormalized}\n      media={media}\n      left={leftNormalized}\n      right={rightNormalized}\n      top={topNormalized}\n      bottom={bottomNormalized}\n      position={positionNormalized}\n      tag={tag}\n      style={cssModeNormalized === 'grid'\n        ? styleNormalized\n        : styleOuterNormalized\n      }\n      ref={ref}\n    >\n      {control && controlIsVisible && (\n        <Control\n          cssMode={cssModeNormalized}\n          colspan={colspan}\n          breakpoints={breakpoints}\n          gutterX={gutterX}\n          gutterY={gutterY}\n          left={left}\n          right={right}\n          top={top}\n          bottom={bottom}\n          controlColor={controlColor}\n        />\n      )}\n      <Inner\n        cssMode={cssModeNormalized}\n        className='Grid__Inner'\n        gutterX={gutterXNormalized}\n        gutterY={gutterYNormalized}\n        alignX={alignXNormalized}\n        alignY={alignYNormalized}\n        media={media}\n        style={styleInnerNormalized}\n        controlColor={controlColor}\n      >\n        <Resetter\n          cssMode={cssModeNormalized}\n          className='Grid__Resetter'\n          hasChildBoxes\n          gutterX={gutterXNormalized}\n          gutterY={gutterYNormalized}\n          alignX={alignXNormalized}\n          alignY={alignYNormalized}\n          media={media}\n        >\n          <Context.Provider\n            value={{\n              cssMode: cssModeNormalized,\n              breakpoints: breakpointsNormalized,\n              gutterX: gutterXNormalized,\n              gutterY: gutterYNormalized,\n              alignX: alignXNormalized,\n              alignY: alignYNormalized,\n              media,\n              colspan,\n              parent,\n              controlIsVisible,\n              controlColor\n            }}\n          >\n            {children}\n          </Context.Provider>\n        </Resetter>\n      </Inner>\n    </StyledContainer>\n  )\n})\n\nGrid.propTypes = {\n  /** Breakpoints in Pixels, in ascending order starting with zero. */\n  breakpoints: PropTypes.array,\n  /** Number of columns. */\n  colspan: PropTypes.number,\n  /**  Left padding of the Grid. */\n  left: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Right padding of the Grid. */\n  right: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Top padding of the Grid. */\n  top: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Bottom padding of the Grid. */\n  bottom: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal gutter. */\n  gutterX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Verical gutter. */\n  gutterY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal align of child elements. Works only when: cssMode={flex}  */\n  alignX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Vertical align of child elements. */\n  alignY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Enable visual control via ESC-Key. */\n  control: PropTypes.bool,\n  /**  Custom color for the grid-control. */\n  controlColor: PropTypes.string,\n  /**  CSS-position. */\n  position: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  className: PropTypes.string,\n  /**  cssMode={grid} only! Custom styles with styled-components. */\n  style: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Inner-Container with styled-components. */\n  styleInner: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Outer-Container with styled-components. */\n  styleOuter: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  children: PropTypes.node,\n  /**  Use CSS Grid Layout or Flexbox. Override automatic detection of Grid-Layout-support. */\n  cssMode: PropTypes.string,\n  tag: PropTypes.string\n  /**  cssMode={flex} only!  Tell react-raster that you have child-Boxes inside this Grid- or Box-Component. See the topic \"Group Boxes inside custom components\" for more information. If the Boxes are nested inside other components react-raster does not know, that you are sitll using its grid. */\n  // reset: PropTypes.bool\n}\n\nGrid.defaultProps = {\n  breakpoints: [0, 432, 800, 1025, 1200, 1400],\n  left: '0',\n  right: '0',\n  top: '0',\n  bottom: '0',\n  gutterX: '0',\n  gutterY: '0',\n  alignX: '',\n  alignY: '',\n  colspan: 1,\n  control: false,\n  controlColor: 'rgba(0, 0, 0, 0.2)',\n  position: 'relative',\n  style: '',\n  styleOuter: '',\n  styleInner: '',\n  className: '',\n  children: null,\n  cssMode: undefined,\n  tag: 'div'\n  // reset: undefined\n}\n\nexport default Grid\nexport { Grid }\n","import { css } from 'styled-components'\n\nexport default (breakpoints) => {\n  const breakpointsLength = breakpoints.length\n  return breakpoints.map((bp, index) => {\n    const max = index !== breakpointsLength - 1\n      ? ` and (max-width: ${breakpoints[index + 1] - 1}px)`\n      : ''\n\n    return (...args) => css`\n      @media (min-width: ${bp}px)${max} {\n        ${css(...args)};\n      }\n    `\n  })\n}\n","export { default as Grid } from './Grid'\nexport { default as Box } from './Box'\n","module.exports = __webpack_public_path__ + \"static/image-1-eccf4f7ba9a159d650716ae15279e682.jpg\";","module.exports = __webpack_public_path__ + \"static/image-2-da6160ba8a2e9c93efc8d35a819a1df5.jpg\";","module.exports = __webpack_public_path__ + \"static/image-3-5e617a333df9c755a71b210b8a49e2b4.jpg\";","module.exports = __webpack_public_path__ + \"static/image-4-092afe3104f0491a58f331156e20cfb8.jpg\";","module.exports = __webpack_public_path__ + \"static/image-5-a81aee5143703919c113b9c84881d3c8.jpg\";"],"sourceRoot":""}