{"version":3,"sources":["webpack:///./src/pages/Grid.mdx","webpack:///./src/raster/utils/useControl.js","webpack:///./src/raster/utils/useCssMode.js","webpack:///./src/raster/Grid/container.js","webpack:///./src/raster/Control/index.js","webpack:///./src/raster/Grid/index.js","webpack:///./src/raster/utils/getMediaQueries.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__","_extends","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","of","Grid","isMDXComponent","useControl","control","_useState2","_slicedToArray","useState","isVisible","setIsVisible","useEffect","onKeyup","event","prevState","document","utils_useControl","GridContainer","styled","container","withConfig","displayName","componentId","colspan","media","map","index","_templateObject","FlexContainer","_templateObject2","Grid_container","react_default","a","createElement","styleOuter","Control","raster_Grid","position","className","alignY","_toConsumableArray","Array","col","Box","key","cols","styleInner","concat","controlColor","raster_Control","__webpack_require__","d","__webpack_exports__","Grid_Grid","breakpoints","left","right","top","bottom","gutterX","gutterY","alignX","style","children","cssMode","tag","controlIsVisible","cssModeNormalized","initialValue","useCssMode_slicedToArray","setCssMode","supportsCSS","window","supports","useCssMode","breakpointsNormalized","useMemo","gutterXNormalized","normalizeProps","prop","gutterYNormalized","alignXNormalized","getAlign","alignYNormalized","breakpointsLength","length","bp","max","css","arguments","parent","leftNormalized","rightNormalized","topNormalized","bottomNormalized","positionNormalized","styleOuterNormalized","styleInnerNormalized","styleNormalized","mergeStyles","classNames","inner","resetter","hasChildBoxes","context","Provider","value","PropTypes","array","number","string","bool","node","undefined"],"mappings":"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","file":"component---src-pages-grid-mdx-5aaf9192de0f5250dee9.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/andreasfaust/components/react-raster/.docz/app/components/Layout.js\";\nimport { Props } from \"docz\";\nimport { Grid } from \"../raster/Grid\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"grid\"\n    }}>{`Grid`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p>{`Proptable is coming soon!\nSee the example at `}<strong parentName=\"p\">{`Getting Started`}</strong>{` in the meantime.`}</p>\n    <Props of={Grid} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      ","import { useState, useEffect } from 'react'\n\nconst useControl = (control) => {\n  const [isVisible, setIsVisible] = useState(false)\n  useEffect(() => {\n    function onKeyup (event) {\n      if (event.keyCode !== 27) return\n      setIsVisible(prevState => !prevState)\n    }\n    if (!control) return\n    document.addEventListener('keyup', onKeyup)\n    return () => document.removeEventListener('keyup', onKeyup)\n  }, [])\n\n  return isVisible\n}\n\nexport default useControl\n","import { useState, useEffect } from 'react'\n\nexport default (initialValue) => {\n  const [cssMode, setCssMode] = useState(initialValue)\n\n  useEffect(() => {\n    if (cssMode) return\n    const supportsCSS = (window.CSS && window.CSS.supports) || window.supportsCSS || false\n    const supportsGrid = supportsCSS\n      ? supportsCSS('grid-template-rows', 'none')\n      : false\n\n    if (!supportsGrid) {\n      setCssMode('flex')\n    }\n  }, [])\n\n  return cssMode\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../utils/container'\n\nconst GridContainer = styled(Container)`\n  display: grid;\n  grid-template-columns: repeat(${props => props.colspan}, 1fr);\n  grid-auto-columns: ${props => props.colspan}fr;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      grid-column-gap: ${props.gutterX[index]};\n      grid-row-gap: ${props.gutterY[index]};\n      ${props.style[index]}\n      align-items: ${props => props.alignY[index]};\n      justify-content: ${props => props.alignX[index]};\n    `\n  })}\n`\n\nconst FlexContainer = styled(Container)`\n  display: flex;\n  align-items: stretch;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      ${props.style[index]}\n    `\n  })}\n`\n\nexport default (props) => {\n  if (props.cssMode === 'flex') {\n    return <FlexContainer {...props} />\n  }\n  return <GridContainer {...props} />\n}\n","import React from 'react'\nimport Grid from '../Grid'\nimport Box from '../Box'\nimport { css } from 'styled-components'\n\nconst styleOuter = `\n  width: 100%;\n  z-index: 10000;\n  left: 0; \n  top: 0; \n  bottom: 0;\n  margin: 0;\n`\n\nconst Control = (props) => {\n  return (\n    <Grid\n      {...props}\n      position='absolute'\n      className='Grid--Control'\n      alignY='stretch'\n      styleOuter={props.cssMode === 'grid'\n        ? styleOuter\n        : styleOuter + 'margin: 0;'\n      }\n    >\n      {[...Array(props.colspan)].map((col, index) => (\n        <Box\n          key={index}\n          cols={1}\n          styleInner={`\n            background-color: ${props.controlColor};\n          `}\n        />\n      ))}\n    </Grid>\n  )\n}\n\nexport default Control\n","import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Context from '../context'\nimport normalizeProps from '../utils/normalizeProps'\nimport getMediaQueries from '../utils/getMediaQueries'\nimport getAlign from '../utils/getAlign'\nimport useControl from '../utils/useControl'\nimport Inner from '../utils/inner'\nimport Resetter from '../utils/resetter'\nimport useCssMode from '../utils/useCssMode'\nimport StyledContainer from './container'\nimport Control from '../Control'\nimport mergeStyles from '../utils/mergeStyles'\n\nconst Grid = (props) => {\n  const {\n    breakpoints,\n    left,\n    right,\n    top,\n    bottom,\n    gutterX,\n    gutterY,\n    alignX,\n    alignY,\n    colspan,\n    control,\n    controlColor,\n    position,\n    className,\n    style,\n    styleInner,\n    styleOuter,\n    children,\n    cssMode,\n    tag\n  } = props\n  const controlIsVisible = useControl(control)\n  const cssModeNormalized = useCssMode(cssMode || 'grid')\n\n  const breakpointsNormalized = useMemo(() => breakpoints, [breakpoints])\n  const gutterXNormalized = useMemo(() => normalizeProps({ prop: gutterX, breakpoints: breakpointsNormalized }), [gutterX, breakpointsNormalized])\n  const gutterYNormalized = useMemo(() => normalizeProps({ prop: gutterY, breakpoints: breakpointsNormalized }), [gutterY, breakpointsNormalized])\n  const alignXNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignX, breakpoints: breakpointsNormalized }), cssModeNormalized), [alignX, breakpointsNormalized, cssModeNormalized])\n  const alignYNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignY, breakpoints: breakpointsNormalized }), cssModeNormalized), [alignY, breakpointsNormalized, cssModeNormalized])\n\n  const media = useMemo(() => getMediaQueries(breakpointsNormalized), [breakpointsNormalized])\n  const parent = useMemo(() => normalizeProps({ prop: colspan, breakpoints: breakpointsNormalized }), [colspan, breakpointsNormalized])\n  const leftNormalized = useMemo(() => normalizeProps({ prop: left, breakpoints: breakpointsNormalized }), [left, breakpointsNormalized])\n  const rightNormalized = useMemo(() => normalizeProps({ prop: right, breakpoints: breakpointsNormalized }), [right, breakpointsNormalized])\n  const topNormalized = useMemo(() => normalizeProps({ prop: top, breakpoints: breakpointsNormalized }), [top, breakpointsNormalized])\n  const bottomNormalized = useMemo(() => normalizeProps({ prop: bottom, breakpoints: breakpointsNormalized }), [bottom, breakpointsNormalized])\n  const positionNormalized = useMemo(() => normalizeProps({ prop: position, breakpoints: breakpointsNormalized }), [position, breakpointsNormalized])\n  const styleOuterNormalized = useMemo(() => normalizeProps({ prop: styleOuter, breakpoints }), [styleOuter, breakpoints])\n  const styleInnerNormalized = useMemo(() => normalizeProps({ prop: styleInner, breakpoints }), [styleInner, breakpoints])\n  const styleNormalized = useMemo(() => mergeStyles(normalizeProps({ prop: style, breakpoints }), styleInnerNormalized, styleOuterNormalized), [style, breakpoints, styleInnerNormalized, styleOuterNormalized])\n\n  return (\n    <StyledContainer\n      cssMode={cssModeNormalized}\n      colspan={colspan}\n      className={classNames(['Grid', className])}\n      gutterX={gutterXNormalized}\n      gutterY={gutterYNormalized}\n      alignX={alignXNormalized}\n      alignY={alignYNormalized}\n      media={media}\n      left={leftNormalized}\n      right={rightNormalized}\n      top={topNormalized}\n      bottom={bottomNormalized}\n      position={positionNormalized}\n      tag={tag}\n      style={cssModeNormalized === 'grid'\n        ? styleNormalized\n        : styleOuterNormalized\n      }\n    >\n      {control && controlIsVisible && (\n        <Control\n          cssMode={cssModeNormalized}\n          colspan={colspan}\n          breakpoints={breakpoints}\n          gutterX={gutterX}\n          gutterY={gutterY}\n          left={left}\n          right={right}\n          top={top}\n          bottom={bottom}\n          controlColor={controlColor}\n        />\n      )}\n      <Inner\n        cssMode={cssModeNormalized}\n        className='Grid__Inner'\n        gutterX={gutterXNormalized}\n        gutterY={gutterYNormalized}\n        alignX={alignXNormalized}\n        alignY={alignYNormalized}\n        media={media}\n        style={styleInnerNormalized}\n        controlColor={controlColor}\n      >\n        <Resetter\n          cssMode={cssModeNormalized}\n          className='Grid__Resetter'\n          hasChildBoxes\n          gutterX={gutterXNormalized}\n          gutterY={gutterYNormalized}\n          alignX={alignXNormalized}\n          alignY={alignYNormalized}\n          media={media}\n        >\n          <Context.Provider\n            value={{\n              cssMode: cssModeNormalized,\n              breakpoints: breakpointsNormalized,\n              gutterX: gutterXNormalized,\n              gutterY: gutterYNormalized,\n              alignX: alignXNormalized,\n              alignY: alignYNormalized,\n              media,\n              colspan,\n              parent,\n              controlIsVisible,\n              controlColor\n            }}\n          >\n            {children}\n          </Context.Provider>\n        </Resetter>\n      </Inner>\n    </StyledContainer>\n  )\n}\n\nGrid.propTypes = {\n  /** Breakpoints in Pixels, in ascending order starting with zero. */\n  breakpoints: PropTypes.array,\n  /** Number of columns. */\n  colspan: PropTypes.number,\n  /**  Left padding of the Grid. */\n  left: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Right padding of the Grid. */\n  right: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Top padding of the Grid. */\n  top: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Bottom padding of the Grid. */\n  bottom: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal gutter. */\n  gutterX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Verical gutter. */\n  gutterY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal align of child elements. Works only when: cssMode={flex}  */\n  alignX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Vertical align of child elements. */\n  alignY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Enable visual control via ESC-Key. */\n  control: PropTypes.bool,\n  /**  Custom color for the grid-control. */\n  controlColor: PropTypes.string,\n  /**  CSS-position. */\n  position: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  className: PropTypes.string,\n  /**  cssMode={grid} only! Custom styles with styled-components. */\n  style: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Inner-Container with styled-components. */\n  styleInner: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Outer-Container with styled-components. */\n  styleOuter: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  children: PropTypes.node,\n  /**  Use CSS Grid Layout or Flexbox. Override automatic detection of Grid-Layout-support. */\n  cssMode: PropTypes.string,\n  tag: PropTypes.string\n  /**  cssMode={flex} only!  Tell react-raster that you have child-Boxes inside this Grid- or Box-Component. See the topic \"Group Boxes inside custom components\" for more information. If the Boxes are nested inside other components react-raster does not know, that you are sitll using its grid. */\n  // reset: PropTypes.bool\n}\n\nGrid.defaultProps = {\n  breakpoints: [0, 432, 800, 1025, 1200, 1400],\n  left: '0',\n  right: '0',\n  top: '0',\n  bottom: '0',\n  gutterX: '0',\n  gutterY: '0',\n  alignX: '',\n  alignY: '',\n  colspan: 1,\n  control: false,\n  controlColor: 'rgba(0, 0, 0, 0.2)',\n  position: 'relative',\n  style: '',\n  styleOuter: '',\n  styleInner: '',\n  className: '',\n  children: null,\n  cssMode: undefined,\n  tag: 'div'\n  // reset: undefined\n}\n\nexport default Grid\nexport { Grid }\n","import { css } from 'styled-components'\n\nexport default (breakpoints) => {\n  const breakpointsLength = breakpoints.length\n  return breakpoints.map((bp, index) => {\n    const max = index !== breakpointsLength - 1\n      ? ` and (max-width: ${breakpoints[index + 1] - 1}px)`\n      : ''\n\n    return (...args) => css`\n      @media (min-width: ${bp}px)${max} {\n        ${css(...args)};\n      }\n    `\n  })\n}\n"],"sourceRoot":""}