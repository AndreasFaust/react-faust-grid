{"version":3,"sources":["webpack:///./src/images/image-4.jpg","webpack:///./src/images/image-5.jpg","webpack:///./src/pages/index.mdx","webpack:///./src/raster/utils/getMediaQueries.js","webpack:///./src/raster/utils/useControl.js","webpack:///./src/raster/utils/useCssMode.js","webpack:///./src/raster/Grid/container.js","webpack:///./src/raster/Control/index.js","webpack:///./src/raster/utils/useCurrentBreakpoint.js","webpack:///./src/raster/Grid/index.js","webpack:///./src/raster/index.js","webpack:///./src/images/image-1.jpg","webpack:///./src/images/image-2.jpg","webpack:///./src/images/image-3.jpg"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Grid","Box","image1","image2","image3","image4","image5","left","right","top","bottom","gutterX","gutterY","colSpan","alignX","alignY","control","style","cols","className","src","alt","isMDXComponent","useControl","useState","isVisible","setIsVisible","useEffect","onKeyup","event","prevState","document","GridContainer","styled","media","FlexContainer","ref","styleOuter","Control","position","styleInner","Array","key","breakpoints","colspan","controlColor","children","cssMode","tag","controlIsVisible","cssModeNormalized","setCssMode","supportsCSS","window","useCssMode","breakpointsNormalized","useMemo","currentBreakpoint","currentBp","setCurrentBp","onResize","w","bp","breakpoint","useCurrentBreakpoint","gutterXNormalized","normalizeProps","prop","gutterYNormalized","alignXNormalized","getAlign","alignYNormalized","breakpointsLength","max","index","css","getMediaQueries","parent","leftNormalized","rightNormalized","topNormalized","bottomNormalized","positionNormalized","styleOuterNormalized","styleInnerNormalized","styleNormalized","mergeStyles","classNames","hasChildBoxes","value","PropTypes","string"],"mappings":"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","file":"component---src-pages-index-mdx-60e87f4d51e9d148910c.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/image-4-092afe3104f0491a58f331156e20cfb8.jpg\";","module.exports = __webpack_public_path__ + \"static/image-5-a81aee5143703919c113b9c84881d3c8.jpg\";","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/andreasfaust/components/react-raster/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Grid, Box } from \"../raster\";\nimport image1 from \"../images/image-1.jpg\";\nimport image2 from \"../images/image-2.jpg\";\nimport image3 from \"../images/image-3.jpg\";\nimport image4 from \"../images/image-4.jpg\";\nimport image5 from \"../images/image-5.jpg\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"react-raster\"\n    }}>{`react-raster`}</h1>\n    <p>{`An advanced grid-system based on styled-components; highly customizable while being easy to use.\nRegardless, if your grid is simple or complex: react-raster simplifies layouting.`}</p>\n    <p>{`It combines features from `}<inlineCode parentName=\"p\">{`Flexbox`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Grid Layout`}</inlineCode>{` to provide a simple yet flexible layout-interface.\nOn current browsers it uses the benefits of `}<inlineCode parentName=\"p\">{`Grid Layout`}</inlineCode>{`. On legacy browsers it automatically falls back to plain `}<inlineCode parentName=\"p\">{`Flexbox`}</inlineCode>{` (almost) without any changes (see Section `}<strong parentName=\"p\">{`Flexbox`}</strong>{`).`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p><strong parentName=\"p\">{`Scale your viewport`}</strong>{` to see the layout changing.`}</p>\n    <p>{`Press `}<inlineCode parentName=\"p\">{`ESC`}</inlineCode>{` to see the visual control.`}</p>\n    <Playground __position={0} __code={'<Grid\\n  left={\\'3vw\\'}\\n  right={\\'3vw\\'}\\n  top={\\'1rem\\'}\\n  bottom={\\'2rem\\'}\\n  gutterX={\\'1.5vw\\'}\\n  gutterY={\\'10px\\'}\\n  colspan={12}\\n  alignX={\\'right\\'}\\n  alignY={\\'top\\'}\\n  control\\n  style={`background-image: linear-gradient(lightblue, coral);`}\\n>\\n  <Box\\n    top={1}\\n    cols={[3, 3, 3, 6]}\\n    style={`\\n          background: pink;\\n          img { width: 100%; display: block; }\\n        `}\\n  >\\n    <div className=\\\"image-wrapper\\\">\\n      <img src={image1} alt=\\\"Sample Image\\\" />\\n    </div>\\n  </Box>\\n  <Box\\n    top={1}\\n    cols={[3, 3, 3, 6]}\\n    style={`\\n          background: pink;\\n          align-self: end;\\n          img { width: 100%; display: block; }\\n        `}\\n  >\\n    <div className=\\\"image-wrapper\\\">\\n      <img src={image2} alt=\\\"Sample Image\\\" />\\n    </div>\\n  </Box>\\n  <Box\\n    top={1}\\n    left={[2, 2, 2, 0]}\\n    cols={4}\\n    style={`\\n          background: pink;\\n          img { width: 100%; display: block; }\\n        `}\\n  >\\n    <div className=\\\"image-wrapper\\\">\\n      <img src={image3} alt=\\\"Sample Image\\\" />\\n    </div>\\n  </Box>\\n  <Box\\n    cols={[12, 12, 12, 8]}\\n    left={0}\\n    top={1}\\n    alignY=\\\"center\\\"\\n    style={`\\n          background-image: linear-gradient(lightblue, yellow);\\n        `}\\n  >\\n    <Box\\n      cols={5}\\n      style={`\\n            background: yellow;\\n            img { width: 100%; display: block; }\\n          `}\\n    >\\n      <div className=\\\"image-wrapper\\\">\\n        <img src={image4} alt=\\\"Sample Image\\\" />\\n      </div>\\n    </Box>\\n    <Box\\n      cols={5}\\n      left={2}\\n      style={`\\n            background: yellow;\\n            img { width: 100%; display: block; }\\n          `}\\n    >\\n      <div className=\\\"image-wrapper\\\">\\n        <img src={image5} alt=\\\"Sample Image\\\" />\\n      </div>\\n    </Box>\\n  </Box>\\n</Grid>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Grid,\n      Box,\n      image1,\n      image2,\n      image3,\n      image4,\n      image5\n    }} mdxType=\"Playground\">\n    <Grid left={'3vw'} right={'3vw'} top={'1rem'} bottom={'2rem'} gutterX={'1.5vw'} gutterY={'10px'} colSpan={12} alignX={'right'} alignY={'top'} control style={`background-image: linear-gradient(lightblue, coral);`} mdxType=\"Grid\">\n        <Box top={1} cols={[3, 3, 3, 6]} style={`\n            background: pink;\n            img { width: 100%; display: block; }\n          `} mdxType=\"Box\">\n            <div className='image-wrapper'>\n              <img src={image1} alt=\"Sample Image\" />\n            </div>\n        </Box>\n        <Box top={1} cols={[3, 3, 3, 6]} style={`\n            background: pink;\n            align-self: end;\n            img { width: 100%; display: block; }\n          `} mdxType=\"Box\">\n          <div className='image-wrapper'>\n            <img src={image2} alt=\"Sample Image\" />\n          </div>\n        </Box>\n        <Box top={1} left={[2, 2, 2, 0]} cols={4} style={`\n            background: pink;\n            img { width: 100%; display: block; }\n          `} mdxType=\"Box\">\n          <div className='image-wrapper'>\n            <img src={image3} alt=\"Sample Image\" />\n          </div>\n        </Box>\n        <Box cols={[12, 12, 12, 8]} left={0} top={1} alignY='center' style={`\n            background-image: linear-gradient(lightblue, yellow);\n          `} mdxType=\"Box\">\n          <Box cols={5} style={`\n              background: yellow;\n              img { width: 100%; display: block; }\n            `} mdxType=\"Box\">\n            <div className='image-wrapper'>\n              <img src={image4} alt=\"Sample Image\" />\n            </div>\n          </Box>\n          <Box cols={5} left={2} style={`\n              background: yellow;\n              img { width: 100%; display: block; }\n            `} mdxType=\"Box\">\n            <div className='image-wrapper'>\n              <img src={image5} alt=\"Sample Image\" />\n            </div>\n          </Box>\n        </Box>\n    </Grid>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { css } from 'styled-components'\n\nexport default (breakpoints) => {\n  const breakpointsLength = breakpoints.length\n  return breakpoints.map((bp, index) => {\n    const max = index !== breakpointsLength - 1\n      ? ` and (max-width: ${breakpoints[index + 1] - 1}px)`\n      : ''\n\n    return (...args) => css`\n      @media (min-width: ${bp}px)${max} {\n        ${css(...args)};\n      }\n    `\n  })\n}\n","import { useState, useEffect } from 'react'\n\nconst useControl = (control) => {\n  const [isVisible, setIsVisible] = useState(false)\n  useEffect(() => {\n    function onKeyup (event) {\n      if (event.keyCode !== 27) return\n      setIsVisible(prevState => !prevState)\n    }\n    if (!control) return\n    document.addEventListener('keyup', onKeyup)\n    return () => document.removeEventListener('keyup', onKeyup)\n  }, [])\n\n  return isVisible\n}\n\nexport default useControl\n","import { useState, useEffect } from 'react'\n\nexport default (initialValue) => {\n  const [cssMode, setCssMode] = useState(initialValue)\n\n  useEffect(() => {\n    if (cssMode) return\n    const supportsCSS = (window.CSS && window.CSS.supports) || window.supportsCSS || false\n    const supportsGrid = supportsCSS\n      ? supportsCSS('grid-template-rows', 'none')\n      : false\n\n    if (!supportsGrid) {\n      setCssMode('flex')\n    }\n  }, [])\n\n  return cssMode\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../utils/container'\n\nconst GridContainer = styled(Container)`\n  display: grid;\n  grid-template-columns: repeat(${props => props.colspan}, 1fr);\n  grid-auto-columns: ${props => props.colspan}fr;\n  grid-auto-rows: min-content;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      grid-column-gap: ${props.gutterX[index]};\n      grid-row-gap: ${props.gutterY[index]};\n      ${props.style[index]}\n      align-content: ${props => props.alignY[index]};\n      align-items: ${props => props.alignY[index]};\n      // justify-content: ${props => props.alignX[index]};\n    `\n  })}\n`\n\nconst FlexContainer = styled(Container)`\n  display: flex;\n  align-items: stretch;\n  box-sizing: border-box;\n\n  ${props => props.media.map((media, index) => {\n    return media`\n      position: ${props => props.position[index]};\n      padding-left: ${props.left[index]};\n      padding-right: ${props.right[index]};\n      padding-top: ${props.top[index]};\n      padding-bottom: ${props.bottom[index]};\n      ${props.style[index]}\n    `\n  })}\n`\n\nexport default React.forwardRef((props, ref) => {\n  if (props.cssMode === 'flex') {\n    return <FlexContainer {...props} ref={ref} />\n  }\n  return <GridContainer {...props} ref={ref} />\n})\n","import React from 'react'\nimport Grid from '../Grid'\nimport Box from '../Box'\n// import { css } from 'styled-components'\n\nconst styleOuter = `\n  width: 100%;\n  z-index: 10000;\n  left: 0; \n  top: 0; \n  bottom: 0;\n  margin: 0;\n`\n\nconst Control = (props) => {\n  return (\n    <Grid\n      {...props}\n      position='absolute'\n      className='Grid--Control'\n      alignY='stretch'\n      styleOuter={props.cssMode === 'grid'\n        ? styleOuter\n        : styleOuter + 'margin: 0;'\n      }\n      styleInner={`\n        grid-auto-rows: auto;\n      `}\n    >\n      {[...Array(props.colspan)].map((col, index) => (\n        <Box\n          key={index}\n          cols={1}\n          styleInner={`\n            background-color: ${props.controlColor};\n          `}\n        />\n      ))}\n    </Grid>\n  )\n}\n\nexport default Control\n","import { useState, useEffect } from 'react'\n\nexport default (breakpoints) => {\n  const [currentBp, setCurrentBp] = useState(0)\n  useEffect(() => {\n    function onResize () {\n      const w = window.innerWidth\n      let bp = 0\n      breakpoints.forEach(breakpoint => {\n        if (breakpoint <= w) {\n          bp = breakpoint\n        }\n      })\n      setCurrentBp(bp)\n    }\n    onResize()\n    window.addEventListener('resize', onResize)\n    return () => window.removeEventListener('resize', onResize)\n  }, [])\n  return currentBp\n}\n","import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Context from '../context'\nimport normalizeProps from '../utils/normalizeProps'\nimport getMediaQueries from '../utils/getMediaQueries'\nimport getAlign from '../utils/getAlign'\nimport useControl from '../utils/useControl'\nimport Inner from '../utils/inner'\nimport Resetter from '../utils/resetter'\nimport useCssMode from '../utils/useCssMode'\nimport StyledContainer from './container'\nimport Control from '../Control'\nimport mergeStyles from '../utils/mergeStyles'\nimport useCurrentBreakpoint from '../utils/useCurrentBreakpoint'\n\nconst Grid = React.forwardRef((props, ref) => {\n  const {\n    breakpoints,\n    left,\n    right,\n    top,\n    bottom,\n    gutterX,\n    gutterY,\n    alignX,\n    alignY,\n    colspan,\n    control,\n    controlColor,\n    position,\n    className,\n    style,\n    styleInner,\n    styleOuter,\n    children,\n    cssMode,\n    tag\n  } = props\n  const controlIsVisible = useControl(control)\n  const cssModeNormalized = useCssMode(cssMode || 'grid')\n\n  const breakpointsNormalized = useMemo(() => breakpoints, [breakpoints])\n  const currentBreakpoint = useCurrentBreakpoint(breakpointsNormalized)\n  const gutterXNormalized = useMemo(() => normalizeProps({ prop: gutterX, breakpoints: breakpointsNormalized }), [gutterX, breakpointsNormalized])\n  const gutterYNormalized = useMemo(() => normalizeProps({ prop: gutterY, breakpoints: breakpointsNormalized }), [gutterY, breakpointsNormalized])\n  const alignXNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignX, breakpoints: breakpointsNormalized }), cssModeNormalized, true), [alignX, breakpointsNormalized, cssModeNormalized])\n  const alignYNormalized = useMemo(() => getAlign(normalizeProps({ prop: alignY, breakpoints: breakpointsNormalized }), cssModeNormalized, true), [alignY, breakpointsNormalized, cssModeNormalized])\n\n  const media = useMemo(() => getMediaQueries(breakpointsNormalized), [breakpointsNormalized])\n  const parent = useMemo(() => normalizeProps({ prop: colspan, breakpoints: breakpointsNormalized }), [colspan, breakpointsNormalized])\n  const leftNormalized = useMemo(() => normalizeProps({ prop: left, breakpoints: breakpointsNormalized }), [left, breakpointsNormalized])\n  const rightNormalized = useMemo(() => normalizeProps({ prop: right, breakpoints: breakpointsNormalized }), [right, breakpointsNormalized])\n  const topNormalized = useMemo(() => normalizeProps({ prop: top, breakpoints: breakpointsNormalized }), [top, breakpointsNormalized])\n  const bottomNormalized = useMemo(() => normalizeProps({ prop: bottom, breakpoints: breakpointsNormalized }), [bottom, breakpointsNormalized])\n  const positionNormalized = useMemo(() => normalizeProps({ prop: position, breakpoints: breakpointsNormalized }), [position, breakpointsNormalized])\n  const styleOuterNormalized = useMemo(() => normalizeProps({ prop: styleOuter, breakpoints }), [styleOuter, breakpoints])\n  const styleInnerNormalized = useMemo(() => normalizeProps({ prop: styleInner, breakpoints }), [styleInner, breakpoints])\n  const styleNormalized = useMemo(() => mergeStyles(normalizeProps({ prop: style, breakpoints }), styleInnerNormalized, styleOuterNormalized), [style, breakpoints, styleInnerNormalized, styleOuterNormalized])\n\n  return (\n    <StyledContainer\n      cssMode={cssModeNormalized}\n      colspan={colspan}\n      className={classNames(['Grid', `bp-${currentBreakpoint}`, className])}\n      gutterX={gutterXNormalized}\n      gutterY={gutterYNormalized}\n      alignX={alignXNormalized}\n      alignY={alignYNormalized}\n      media={media}\n      left={leftNormalized}\n      right={rightNormalized}\n      top={topNormalized}\n      bottom={bottomNormalized}\n      position={positionNormalized}\n      tag={tag}\n      style={cssModeNormalized === 'grid'\n        ? styleNormalized\n        : styleOuterNormalized\n      }\n      ref={ref}\n    >\n      {control && controlIsVisible && (\n        <Control\n          cssMode={cssModeNormalized}\n          colspan={colspan}\n          breakpoints={breakpoints}\n          gutterX={gutterX}\n          gutterY={gutterY}\n          left={left}\n          right={right}\n          top={top}\n          bottom={bottom}\n          controlColor={controlColor}\n        />\n      )}\n      <Inner\n        cssMode={cssModeNormalized}\n        className='Grid__Inner'\n        gutterX={gutterXNormalized}\n        gutterY={gutterYNormalized}\n        alignX={alignXNormalized}\n        alignY={alignYNormalized}\n        media={media}\n        style={styleInnerNormalized}\n        controlColor={controlColor}\n      >\n        <Resetter\n          cssMode={cssModeNormalized}\n          className='Grid__Resetter'\n          hasChildBoxes\n          gutterX={gutterXNormalized}\n          gutterY={gutterYNormalized}\n          alignX={alignXNormalized}\n          alignY={alignYNormalized}\n          media={media}\n        >\n          <Context.Provider\n            value={{\n              cssMode: cssModeNormalized,\n              breakpoints: breakpointsNormalized,\n              gutterX: gutterXNormalized,\n              gutterY: gutterYNormalized,\n              alignX: alignXNormalized,\n              alignY: alignYNormalized,\n              media,\n              colspan,\n              parent,\n              controlIsVisible,\n              controlColor\n            }}\n          >\n            {children}\n          </Context.Provider>\n        </Resetter>\n      </Inner>\n    </StyledContainer>\n  )\n})\n\nGrid.propTypes = {\n  /** Breakpoints in Pixels, in ascending order starting with zero. */\n  breakpoints: PropTypes.array,\n  /** Number of columns. */\n  colspan: PropTypes.number,\n  /**  Left padding of the Grid. */\n  left: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Right padding of the Grid. */\n  right: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Top padding of the Grid. */\n  top: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Bottom padding of the Grid. */\n  bottom: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal gutter. */\n  gutterX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Verical gutter. */\n  gutterY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Horizontal align of child elements. Works only when: cssMode={flex}  */\n  alignX: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Vertical align of child elements. */\n  alignY: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  Enable visual control via ESC-Key. */\n  control: PropTypes.bool,\n  /**  Custom color for the grid-control. */\n  controlColor: PropTypes.string,\n  /**  CSS-position. */\n  position: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  className: PropTypes.string,\n  /**  cssMode={grid} only! Custom styles with styled-components. */\n  style: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Inner-Container with styled-components. */\n  styleInner: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  /**  cssMode={flex} only! Styles Grid-Outer-Container with styled-components. */\n  styleOuter: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  children: PropTypes.node,\n  /**  Use CSS Grid Layout or Flexbox. Override automatic detection of Grid-Layout-support. */\n  cssMode: PropTypes.string,\n  tag: PropTypes.string\n  /**  cssMode={flex} only!  Tell react-raster that you have child-Boxes inside this Grid- or Box-Component. See the topic \"Group Boxes inside custom components\" for more information. If the Boxes are nested inside other components react-raster does not know, that you are sitll using its grid. */\n  // reset: PropTypes.bool\n}\n\nGrid.defaultProps = {\n  breakpoints: [0, 432, 768, 1024, 1200, 1400],\n  left: '0',\n  right: '0',\n  top: '0',\n  bottom: '0',\n  gutterX: '0',\n  gutterY: '0',\n  alignX: '',\n  alignY: '',\n  colspan: 1,\n  control: false,\n  controlColor: 'rgba(0, 0, 0, 0.1)',\n  position: 'relative',\n  style: '',\n  styleOuter: '',\n  styleInner: '',\n  className: '',\n  children: null,\n  cssMode: undefined,\n  tag: 'div'\n  // reset: undefined\n}\n\nexport default Grid\nexport { Grid }\n","export { default as Grid } from './Grid'\nexport { default as Box } from './Box'\n","module.exports = __webpack_public_path__ + \"static/image-1-eccf4f7ba9a159d650716ae15279e682.jpg\";","module.exports = __webpack_public_path__ + \"static/image-2-da6160ba8a2e9c93efc8d35a819a1df5.jpg\";","module.exports = __webpack_public_path__ + \"static/image-3-5e617a333df9c755a71b210b8a49e2b4.jpg\";"],"sourceRoot":""}